/*
  HG7881_Motor_Driver_Example - Arduino
  Test doppio motore - FB
  dovrebbe bastare MT_MOVE e non FWD e REV ma non funziona ancora 
  loop vanno bene ma non gira motore.. 
  https://www.BananaRobotics.com/shop/HG7881-(L9110)-Dual-Channel-Motor-Driver-Module
*/

// wired connections
#define HG7881_A_IA 11  // D11 --> Motor A Input A --> MOTOR A +
#define HG7881_A_IB 9   // D9  --> Motor A Input B --> MOTOR A -
#define HG7881_B_IA 10  // D10 --> Motor B Input A --> MOTOR B +
#define HG7881_B_IB 8 // D8  --> Motor B Input B --> MOTOR B -

// functional connections
#define MOTOR_A_PWM HG7881_A_IA // Motor A PWM Speed
#define MOTOR_A_DIR HG7881_A_IB // Motor A Direction
#define MOTOR_B_PWM HG7881_B_IA // Motor B PWM Speed
#define MOTOR_B_DIR HG7881_B_IB // Motor B Direction

// the actual values for "fast" and "slow" depend on the motor
#define SLOW 50  // arbitrary slow speed PWM duty cycle
#define FAST 200 // arbitrary fast speed PWM duty cycle
#define DIR_DELAY 1000 // brief delay for abrupt motor changes
#define FWD 1
#define REV 0

void setup()
{
  Serial.begin( 9600 );
  pinMode( MOTOR_B_DIR, OUTPUT );
  pinMode( MOTOR_B_PWM, OUTPUT );
  pinMode( MOTOR_A_DIR, OUTPUT );
  pinMode( MOTOR_A_PWM, OUTPUT );
  digitalWrite( MOTOR_B_DIR, LOW );
  digitalWrite( MOTOR_B_PWM, LOW );
  digitalWrite( MOTOR_A_DIR, LOW );
  digitalWrite( MOTOR_A_PWM, LOW );
}

void MT_STOP() {
digitalWrite( MOTOR_B_DIR, LOW );
digitalWrite( MOTOR_B_PWM, LOW );
digitalWrite( MOTOR_A_DIR, LOW );
digitalWrite( MOTOR_A_PWM, LOW );
}

void MT_FWD(int SPEED) {
  MT_STOP();
  Serial.print( "FWD" );
  Serial.print(" ");
  Serial.println( SPEED );
  digitalWrite( MOTOR_B_DIR, HIGH ); // direction = forward
  analogWrite( MOTOR_B_PWM, 255-SPEED ); // PWM speed = variobile
  digitalWrite( MOTOR_A_DIR, HIGH ); // direction = forward
  analogWrite( MOTOR_A_PWM, 255-SPEED ); // PWM speed = variobile
  delay(DIR_DELAY);
}

void MT_REV(int SPEED) {
  MT_STOP();
  Serial.print( "REV" );
  Serial.print(" ");
  Serial.println( SPEED );
  digitalWrite( MOTOR_B_DIR, LOW ); // direction = reverse
  analogWrite( MOTOR_B_PWM, SPEED ); // PWM speed = variobile
  digitalWrite( MOTOR_A_DIR, LOW ); // direction = reverse
  analogWrite( MOTOR_A_PWM, SPEED ); // PWM speed = variobile
  delay(DIR_DELAY);
}

void MT_MOVE(int SPEED, int DIRECTION) {
  MT_STOP();
  Serial.print(DIRECTION);
  Serial.print(" ");
  Serial.println(SPEED);
  digitalWrite( MOTOR_B_DIR, DIRECTION ); 
  analogWrite( MOTOR_B_PWM, SPEED ); 
  digitalWrite( MOTOR_A_DIR, DIRECTION ); 
  analogWrite( MOTOR_A_PWM, SPEED );
  delay(DIR_DELAY);
}


void loop()
{
  boolean isValidInput;
  // draw a menu on the serial port
  Serial.println( "-----------------------------" );
  Serial.println( "MOTOR v1" );
  Serial.println( "-----------------------------" );

  MT_STOP();
  delay(DIR_DELAY);
  
  MT_MOVE(20, FWD); //FWD SLOW
  MT_MOVE(20, REV); //REV SLOW
  MT_MOVE(40, FWD); //FWD FAST
  MT_MOVE(40, REV); //REV FAST

/*
  MT_FWD(SLOW);   //FWD SLOW
  MT_FWD(FAST);   //FWD FAST
  MT_REV(SLOW);   //REV SLOW
  MT_REV(FAST);   //REV FAST
*/

  Serial.println( "-----------------------------" );
  Serial.println( "End demo MOTOR v1" );
  Serial.println( "-----------------------------" );
}

